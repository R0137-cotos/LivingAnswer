buildscript {
    ext {
        springBootVersion = '3.5.0'
    }
    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "org.sonarqube"
apply plugin: "jacoco"
apply plugin: 'maven-publish'

java {
    toolchain {
         languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://mygithub.ritscm.xyz/raw/cotos/LibsRepo/topic/aws_eosl/repository/CommonLibs' }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web:3.5.0')
    testImplementation 'junit:junit:4.13.2'
    implementation('jp.co.ricoh.cotos:common-libraries:0.0.661')
    compileOnly('org.projectlombok:lombok:1.18.36')
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.5.0')
    testCompileOnly('org.projectlombok:lombok:1.18.36')
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    testRuntimeOnly('com.h2database:h2:2.3.232')
}
sonarqube {
    properties {
        property "sonar.host.url", "http://sonar.cotos.ricoh.co.jp/"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    }
}
def repo = new File(rootDir, "repository")

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = '0.0.4'
            groupId = 'jp.co.ricoh.cotos'
            artifactId = 'isliving'
            from components.java
        }
    }
    repositories {
        maven {
            url = "file://${repo.absolutePath}"
        }
    }
}

java {
	withSourcesJar()
}

test {
	useJUnit()
	forkEvery = 0L
	def heapSize = System.getProperty('test.maxHeapSize') ?: '3G'
	maxHeapSize = heapSize
}